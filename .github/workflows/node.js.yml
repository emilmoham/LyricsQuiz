name: Automated Release Deployment

on:
  push:
    branches: [main]

env:
  NODE_VERSION: 16.17.0

jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build App Artifacts
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: |
          npm i
          npm run build
          tar -czf "${GITHUB_SHA}".tar.gz build
      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: 'Prepare release on INT server'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-artifacts
      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: '22'
          username: '${{ secrets.SSH_USERNAME }}'
          key: ${{ secrets.SSH_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /home/emilmoham/artifacts
      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: '${{ secrets.SSH_USERNAME }}'
          key: ${{ secrets.SSH_KEY }}
          port: '22'
          envs: GITHUB_SHA
          script: |
            mkdir -p "/home/emilmoham/LyricsQuiz/${GITHUB_SHA}"
            tar xzf /home/emilmoham/artifacts/${GITHUB_SHA}.tar.gz -C "/home/emilmoham/LyricsQuiz/${GITHUB_SHA}"
            rm -rf /home/emilmoham/artifacts/${GITHUB_SHA}.tar.gz
  activate-release:
    name: 'Activate release'
    runs-on: ubuntu-latest
    needs: prepare-release-on-servers
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: '${{ secrets.SSH_USERNAME }}'
          key: ${{ secrets.SSH_KEY }}
          port: '22'
          envs: GITHUB_SHA
          script: |
            cd /home/emilmoham/LyricsQuiz/${GITHUB_SHA}
            pm2 delete LyricsQuiz
            pm2 -n LyricsQuiz serve ./build 8012 --spa
            pm2 save

  clean-up:
    name: 'Clean up old versions'
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: '${{ secrets.SSH_USERNAME }}'
          key: ${{ secrets.SSH_KEY }}
          port: '22'
          script: |
            cd /home/emilmoham/LyricsQuiz && ls -t -1 | tail -n +2 | xargs rm -rf
            cd /home/emilmoham/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: app-artifacts
